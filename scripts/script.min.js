import{createApp,reactive}from"https://unpkg.com/petite-vue?module";const util=reactive({fetchData:async api=>await fetch(api).then(res=>res.json()),firstLetterUppercase:str=>str.charAt(0).toUpperCase()+str.slice(1),getNextItem(arr,currentItem){const lastIndex=arr.length-1,nextIndex=arr.indexOf(currentItem)===lastIndex?0:arr.indexOf(currentItem)+1;return arr[nextIndex]},getProgress:(numerator,denominator)=>`${(numerator/denominator*100).toFixed()}%`}),App={util:util,max:905,pokemons:[],types:[],currentLang:"zh-TW"===navigator.language?"zh":"en",currentTypeIdx:-1,currentPokemon:null,isDialogOpen:!1,get progress(){return util.getProgress(this.pokemons.length,this.max)},get pokemonInfoNameSize(){if(!this.currentPokemon)return;const length=this.currentPokemon.name[this.currentLang].length,baseSize="2em";return"en"===this.currentLang&&length>7?`calc(2em * ${1-.03*length})`:"zh"===this.currentLang&&length>3?`calc(2em * ${1-.035*length})`:"2em"},async init(){const pokemons=await util.fetchData("../data/PokeApi.json");this.pokemons=pokemons,pokemons.forEach(pokemon=>{const langs=Object.keys(pokemon.types),types=langs.map(_=>({}));for(const lang of langs)for(const idx in pokemon.types[lang])types[idx][lang]=pokemon.types[lang][idx];types.length=pokemon.types[langs[0]].length;for(const type of types){let isExist=!1;for(const type1 of this.types.map(t=>t[langs[0]]))type[langs[0]]===type1&&(isExist=!0);isExist||this.types.push(type)}})}};createApp(App).mount();